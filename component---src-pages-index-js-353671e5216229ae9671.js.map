{"version":3,"sources":["webpack:///./src/components/sectionHeading.js","webpack:///./src/data/experience.js","webpack:///./src/pages/index.js"],"names":["SectionHeading","children","className","to","experience","company","title","location","time","description","pageQuery","Homepage","data","posts","allMarkdownRemark","edges","header","fixed","avatar","childImageSharp","imgStyle","marginBottom","style","transform","map","x","node","post","fields","slug","frontmatter","date","resume","item","dark"],"mappings":"4NAyBeA,EAtBQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,GAAxB,OACrB,yBACED,UAAS,+CACLA,GAAwB,KAG5B,wBAAIA,UAAU,2DACTC,EACD,kBAAC,OAAD,CAAMA,GAAIA,GAAV,MAEGF,GAGH,0CAEGA,M,YCoBIG,EAtCI,CACjB,CACEC,QAAQ,aACRC,MAAM,qBACNC,SAAS,aACTC,KAAK,QACLC,YAAY,2MAEd,CACEJ,QAAQ,eACRC,MAAM,MACNC,SAAS,mBACTC,KAAK,UACLC,YAAY,gIAEd,CACEJ,QAAQ,aACRC,MAAM,oBACNC,SAAS,cACTC,KAAK,UACLC,YAAY,iLAEd,CACEJ,QAAQ,iBACRC,MAAM,oBACNC,SAAS,cACTC,KAAK,UACLC,YAAY,6HAEd,CACEJ,QAAQ,qBACRC,MAAM,oBACNC,SAAS,cACTC,KAAK,UACLC,YAAY,gKCyDHC,GAFEC,UAhFE,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAML,EAAe,EAAfA,SACpBM,EAAQD,EAAKE,kBAAkBC,MAE7BC,EACJ,yBAAKd,UAAU,2BACb,yBAAKA,UAAU,iEACb,yBAAKA,UAAU,+CACb,0BAAMA,UAAU,sDAAhB,aAGA,wBAAIA,UAAU,YAAd,sCACA,kHAKF,yBAAKA,UAAU,cACb,kBAAC,IAAD,CACEe,MAAOL,EAAKM,OAAOC,gBAAgBF,MACnCG,SAAU,CAAEC,aAAc,GAC1BnB,UAAU,mCACVoB,MAAO,CACLC,UAAW,wBAQvBV,EAAQA,EACLW,KAAI,SAAAC,GAAC,OAAIA,EAAEC,QACXF,KAAI,SAAAG,GAAI,OACP,6BACE,wBAAIzB,UAAU,mCACZ,kBAAC,OAAD,CACEA,UAAU,yCACVC,GAAIwB,EAAKC,OAAOC,MAEfF,EAAKG,YAAYxB,QAGtB,uBAAGJ,UAAU,4CACVyB,EAAKG,YAAYC,MAEpB,uBAAG7B,UAAU,0BAA0ByB,EAAKG,YAAYrB,iBAI9D,IAAMuB,EAAS5B,EAAWoB,KAAI,SAAAS,GAAI,OAChC,oCACE,yBAAK/B,UAAU,iBACb,wBAAIA,UAAU,kBAAkB+B,EAAK5B,SACrC,6BACE,0BAAMH,UAAU,4CACb+B,EAAK3B,MADR,MACkB2B,EAAK1B,SADvB,MACoC0B,EAAKzB,QAI7C,yBAAKN,UAAU,iBACb,uBAAGA,UAAU,WAAW+B,EAAKxB,kBAKnC,OACE,kBAAC,IAAD,CAAQF,SAAUA,EAAUS,OAAQA,EAAQkB,KAAK,QAC/C,kBAAC,IAAD,CAAK5B,MAAM,SACX,kBAAC,EAAD,mBACA,yBAAKJ,UAAU,yDACZ8B,GAEH,kBAAC,EAAD,CAAgB7B,GAAG,UAAnB,SACA,yBAAKD,UAAU,8DACZW,KAQa","file":"component---src-pages-index-js-353671e5216229ae9671.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\n\nconst SectionHeading = ({ children, className, to }) => (\n  <div\n    className={`block mt-4 pb-4 border-t border-yellow-100 ${\n      !!className ? className : ''\n    }`}\n  >\n    <h2 className=\"inline-block bg-green-900 transform -translate-y-4 pr-4\">\n      {!!to ? (\n        <Link to={to}>\n          {`// `}\n          {children}\n        </Link>\n      ) : (\n        <>\n          {`// `}\n          {children}\n        </>\n      )}\n    </h2>\n  </div>\n);\n\nexport default SectionHeading;\n","const experience = [\n  {\n    company: `Amazon AWS`,\n    title: `Front-end Engineer`,\n    location: `Boston, MA`,\n    time: `2019-`,\n    description: `Launched a new AWS managed service, Amazon Detective, to help customers investigate and triage potential security issues in their cloud environments through logs, security events, and visualizations.`,\n  },\n  {\n    company: `Amazon Alexa`,\n    title: `TPM`,\n    location: `Seattle & Boston`,\n    time: `2017-19`,\n    description: `Expanded Alexa News offerings availability internationally and used Alexa-elicited feedback to build machine learning loops.`,\n  },\n  {\n    company: `Amazon.com`,\n    title: `Software Engineer`,\n    location: `Seattle, WA`,\n    time: `2016-17`,\n    description: `Led initiatives to redesign the Amazon.com websites global navigation menu. Our teams' experiments led to $600MM in annual recurring revenue growth for Amazon's retail site.`,\n  },\n  {\n    company: `Microsoft Edge`,\n    title: `Software Engineer`,\n    location: `Redmond, WA`,\n    time: `2015-16`,\n    description: `Built tooling and open-source outreach to help web developers build native Windows apps using the Windows javascript API.`,\n  },\n  {\n    company: `Windows Dev Center`,\n    title: `Software Engineer`,\n    location: `Redmond, WA`,\n    time: `2013-15`,\n    description: `Launched a new unified Windows Dev Center analytics site to allow app developers to see their apps' ratings, performance, usage, and customer demographics.`,\n  },\n];\n\nexport default experience;\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport Image from 'gatsby-image';\n\nimport Layout from '../components/layout';\nimport SectionHeading from '../components/sectionHeading';\nimport SEO from '../components/seo';\nimport experience from '../data/experience';\n\nconst Homepage = ({ data, location }) => {\n  let posts = data.allMarkdownRemark.edges;\n\n  const header = (\n    <div className=\"bg-green-800 py-8 mb-16\">\n      <div className=\"container px-4 block md:grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <div className=\"flex flex-col justify-center -mb-12 md:mb-0\">\n          <span className=\"font-display text-red-600 text-base font-bold mb-2\">\n            Zack Hall\n          </span>\n          <h1 className=\"text-xxl\">Front-end developer in Boston, MA.</h1>\n          <p>\n            Currently, engineer at AWS. Formerly Alexa, Amazon.com, Edge\n            browser, and Windows.\n          </p>\n        </div>\n        <div className=\"max-w-full\">\n          <Image\n            fixed={data.avatar.childImageSharp.fixed}\n            imgStyle={{ marginBottom: 0 }}\n            className=\"border-white border-8 max-w-full\"\n            style={{\n              transform: 'translateY(20%)',\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n\n  posts = posts\n    .map(x => x.node)\n    .map(post => (\n      <div>\n        <h4 className=\"font-body font-normal h-10 mb-2\">\n          <Link\n            className=\"hover:text-green-200 hover:z-underline\"\n            to={post.fields.slug}\n          >\n            {post.frontmatter.title}\n          </Link>\n        </h4>\n        <p className=\"text-green-300 text-sm font-display my-2\">\n          {post.frontmatter.date}\n        </p>\n        <p className=\"text-green-300 text-sm\">{post.frontmatter.description}</p>\n      </div>\n    ));\n\n  const resume = experience.map(item => (\n    <>\n      <div className=\"lg:col-span-1\">\n        <h2 className=\"font-body mb-2\">{item.company}</h2>\n        <div>\n          <span className=\"text-green-300 text-sm font-display my-2\">\n            {item.title} • {item.location} • {item.time}\n          </span>\n        </div>\n      </div>\n      <div className=\"lg:col-span-2\">\n        <p className=\"text-sm\">{item.description}</p>\n      </div>\n    </>\n  ));\n\n  return (\n    <Layout location={location} header={header} dark=\"true\">\n      <SEO title=\"Home\" />\n      <SectionHeading>Experience</SectionHeading>\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-4 row-gap-8 mb-24\">\n        {resume}\n      </div>\n      <SectionHeading to=\"/notes\">Notes</SectionHeading>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-4 mb-24\">\n        {posts}\n      </div>\n    </Layout>\n  );\n};\n\nexport default Homepage;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 480, height: 600, cropFocus: ATTENTION) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}